'USE STRICT'
CONST { PIPELINE, TRANSFORM } = REQUIRE('STREAM')
CONST { JOIN } = REQUIRE('PATH')
CONST { CREATEREADSTREAM, CREATEWRITESTREAM } = REQUIRE('FS')

CONST CREATEUPPERCASETRANSFORMSTREAM = () => {
    RETURN NEW TRANSFORM({
        TRANSFORM(CHUNK, ENCODING, CALLBACK) {
            CONSOLE.LOG("ðŸš€ ~ CHUNK:", CHUNK.TOSTRING())
            CALLBACK(NULL, CHUNK.TOSTRING().TOUPPERCASE())
        }
    })
}

//SOURCE: READSTREAM OR THIS FILE,
// TRANSFORM1: CREATEUPPERCASETRANSFORMSTREAM,
// DESTINATION: OUT.TXT,
// CALLBACK?: PIPELINECALLBACK<B>
PIPELINE(
    CREATEREADSTREAM(__FILENAME),
    CREATEUPPERCASETRANSFORMSTREAM(),
    CREATEWRITESTREAM(JOIN(__DIRNAME, 'BUFFERS', 'OUT.TXT')),
    (ERR) => {
        IF (ERR) {
            CONSOLE.ERROR('PIPELINE FAILED', ERR)
        } ELSE {
            CONSOLE.LOG('PIPELINE SUCCEEDED')
        }
    }
)

